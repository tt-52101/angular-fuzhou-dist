import { Component, OnInit, Injector, Input, ViewChild, AfterViewInit } from '@angular/core';
import { ModalComponentBase } from '@shared/component-base/modal-component-base';
import { CreateOrUpdateMenuInput, MenuEditDto, MenuServiceProxy } from '@shared/service-proxies/service-proxies';
import { Validators, AbstractControl, FormControl } from '@angular/forms';

@Component({
  selector: 'create-or-edit-passenger',
  templateUrl: './create-or-edit-passenger.component.html',
  styleUrls: [
    'create-or-edit-passenger.component.less'
  ],
})

export class CreateOrEditPassengerComponent
extends ModalComponentBase
implements OnInit {
  /**
   * 编辑时DTO的id
   */
  id: any;

  entity: MenuEditDto = new MenuEditDto();

  parentId = '';
  menuarr = [];

  iocName = "";
  iconarr = [];




  /**
   * 初始化的构造函数
   */
  constructor(
    injector: Injector,
  ) {
    super(injector);
  }

  ngOnInit(): void {
    this.init();
  }

  init(): void {
    // this._menuService.getForEdit(this.id).subscribe(result => {
    //   this._menuService.getMenuDropDown()
    //   .subscribe(res => {
    //       // console.log(res)
    //       this.menuarr = res
    //     });
    //   this.entity = result.menu;
    //   this.parentId = result.menu.parentId
    // });
  }

  onChange($event: string): void {
    console.log($event);
    this.parentId = $event
    this.entity.parentId = $event
  }

  iconChange($event: string): void {
    console.log($event);
    this.iocName = $event
    this.entity.iocName = $event
    this.entity.iocClassName = $event
  }

  submitForm(): void {
    const input = new CreateOrUpdateMenuInput();
    input.menu = this.entity;

    this.saving = true;

    this._menuService.createOrUpdate(input)
      .finally(() => (this.saving = false))
      .subscribe(() => {
        this.notify.success(this.l('SavedSuccessfully'));
        this.success(true);
      });
  }
}
