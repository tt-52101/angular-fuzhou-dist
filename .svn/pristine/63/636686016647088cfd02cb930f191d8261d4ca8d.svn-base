import { Component, OnInit, Injector, Input, ViewChild, AfterViewInit } from '@angular/core';
import { ModalComponentBase } from '@shared/component-base/modal-component-base';
import { CreateOrUpdateMenuInput, MenuEditDto, MenuServiceProxy } from '@shared/service-proxies/service-proxies';
import { Validators, AbstractControl, FormControl } from '@angular/forms';

@Component({
  selector: 'create-or-edit-menu',
  templateUrl: './create-or-edit-menu.component.html',
  styleUrls: [
    'create-or-edit-menu.component.less'
  ],
})

export class CreateOrEditMenuComponent
extends ModalComponentBase
implements OnInit {
  /**
   * 编辑时DTO的id
   */
  id: any;

  entity: MenuEditDto = new MenuEditDto();

  parentId = '';
  menuarr = [];

  /**
   * 初始化的构造函数
   */
  constructor(
    injector: Injector,
    private _menuService: MenuServiceProxy
  ) {
    super(injector);
  }

  ngOnInit(): void {
    this.init();
  }



  init(): void {
    this._menuService.getForEdit(this.id).subscribe(result => {
      this._menuService.getMenuDropDown()
        .subscribe(res => {
          // console.log(res)
          this.menuarr = res
        });
      this.entity = result.menu;
      this.parentId = result.menu.parentId
    });
  }

  onChange($event: string): void {
    console.log($event);
    this.parentId=$event
    this.entity.parentId=$event
  }


  submitForm(): void {
    const input = new CreateOrUpdateMenuInput();
    input.menu = this.entity;

    this.saving = true;

    this._menuService.createOrUpdate(input)
      .finally(() => (this.saving = false))
      .subscribe(() => {
        this.notify.success(this.l('SavedSuccessfully'));
        this.success(true);
      });
  }
}
